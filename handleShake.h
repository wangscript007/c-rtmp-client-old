#pragma once

#define COMPLEX_SHAKE 1
const int SHA256_DIGEST_SIZE = 32;
const int HANDLE_SHAKE_SIZE = 1536;

const signed char GENUINE_FMS_KEY[]={
	0x47, 0x65, 0x6e, 0x75, 0x69, 0x6e, 0x65, 0x20,
	0x41, 0x64, 0x6f, 0x62, 0x65, 0x20, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x20, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x20, 0x30, 0x30, 0x31, // Genuine Adobe Flash Media Server 001
	(char)0xf0, (char)0xee, (char)0xc2, (char)0x4a, (char)0x80, (char)0x68, (char)0xbe, (char)0xe8,
	0x2e, (char)0x00, (char)0xd0, (char)0xd1, (char)0x02, (char)0x9e, (char)0x7e, (char)0x57,
	0x6e, (char)0xec, (char)0x5d, (char)0x2d, (char)0x29, (char)0x80, (char)0x6f, (char)0xab,
	(char)0x93, (char)0xb8, (char)0xe6, (char)0x36, (char)0xcf, (char)0xeb, (char)0x31, (char)0xae,
};
const signed char GENUINE_FP_KEY[] = {
	0x47, (char)0x65, (char)0x6E, (char)0x75, (char)0x69, (char)0x6E, (char)0x65, (char)0x20,
	0x41, (char)0x64, (char)0x6F, (char)0x62, (char)0x65, (char)0x20, (char)0x46, (char)0x6C,
	0x61, (char)0x73, (char)0x68, (char)0x20, (char)0x50, (char)0x6C, (char)0x61, (char)0x79,
	0x65, (char)0x72, (char)0x20, (char)0x30, (char)0x30, (char)0x31, (char)/* Genuine Adobe Flash Player 001 */
	0xF0, (char)0xEE, (char)0xC2, (char)0x4A, (char)0x80, (char)0x68, (char)0xBE, (char)0xE8,
	0x2E, (char)0x00, (char)0xD0, (char)0xD1, (char)0x02, (char)0x9E, (char)0x7E, (char)0x57,
	0x6E, (char)0xEC, (char)0x5D, (char)0x2D, (char)0x29, (char)0x80, (char)0x6F, (char)0xAB,
	(char)0x93, (char)0xB8, (char)0xE6, (char)0x36, (char)0xCF, (char)0xEB, (char)0x31, (char)0xAE,
};

bool handleShake(int socketId);
bool sampleHandleShake(int socketId, unsigned char* input);
bool complexHandleShake(int socketId, unsigned char* input);
bool createS2(unsigned char *output);
bool createS1(unsigned char *output);
bool validClient(unsigned char *input, int &scheme, unsigned char *challenge, unsigned char *digest);
bool validClientScheme(unsigned char *pBuffer, int scheme, unsigned char *challenge, unsigned char *digest);
int  getDigestOffset(unsigned char *pBuffer, int scheme);
int	 getDigestOffset0(unsigned char *pBuffer);
int	 getDigestOffset1(unsigned char *pBuffer);
int  getDHOffset(unsigned char *handleShakeBytes, int scheme);//key data
int  getDHOffset0(unsigned char *HandleShakeBytes);
int  getDHOffset1(unsigned char *HandleShakeBytes);